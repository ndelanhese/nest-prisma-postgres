version: '3.5'

services:
  nest_app_server:
    container_name: nest_app_server
    build:
      context: ../../
      dockerfile: .docker/local/nginx/Dockerfile
    ports:
      - '80:80'
    volumes:
      - ./nginx/logs/:/var/log/server
      - ./nginx/sites-enabled/:/etc/nginx/sites-enabled
      - ../../:/var/www/nest_app-api
    restart: unless-stopped
    tty: true
    depends_on:
      - nest_app_api

  nest_app_database:
    container_name: nest_app_database
    build:
      context: ../../
      dockerfile: .docker/local/postgres/Dockerfile
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/scripts:/etc/postgresql/scripts
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: on-failure
    tty: true

  nest_app_redis:
    container_name: nest_app_redis
    build:
      context: ../../
      dockerfile: .docker/local/redis/Dockerfile
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./redis/data:/data
    restart: on-failure
    tty: true

  nest_app_api:
    container_name: nest_app_api
    build:
      context: ../../
      dockerfile: .docker/local/node/Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
    restart: on-failure
    environment:
      NODE_OPTIONS: ${NODE_OPTIONS}
    env_file:
      - ../../.env
    ports:
      - '${API_PORT}:3333'
    working_dir: /var/www/nest_app-api
    volumes:
      - ../../:/var/www/nest_app-api
    tty: true
    links:
      - nest_app_database
      - nest_app_redis

networks:
  default:
    name: nest_app_network
